!function(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.FailedToConvergeError=e.IsNanError=void 0,e.IsNanError=TypeError("resulted in NaN"),e.FailedToConvergeError=Error("failed to converge");e.default=({fn:r,fnParams:a,percentTolerance:o,maxIterations:n,maxStep:t,goal:l,independentVariableIdx:i})=>{let s,d,f,p,u;const N=o/100*l;for(let o=0;o<n;o++){if(d=r.apply(null,a)-l,isNaN(d))throw e.IsNanError;if(Math.abs(d)<=Math.abs(N))return a[i];if(p=a[i],u=p+d,Math.abs(u-p)>t&&(u=u>p?p+t:p-t),a[i]=u,f=r.apply(null,a)-l,isNaN(f))throw e.IsNanError;s=(f-d)/d,0===s&&(s=1e-4),u=p-d/s,t&&Math.abs(u-p)>t&&(u=u>p?p+t:p-t),a[i]=u}throw e.FailedToConvergeError}}("undefined"==typeof goalSeeker?goalSeeker={}:goalSeeker);